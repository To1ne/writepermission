#+TITLE: Install git on a shared webhost
#+REDIRECT_FROM: /2009/09/07/install-git-on-a-shared-webhost/
#+DATE: <2009-09-07 Mon>

** Introduction
   :PROPERTIES:
   :CUSTOM_ID: introduction
   :END:

Recently I ran into an article about using [[http://git-scm.com/][git]] to upload your site
(see links at the bottom how to). But off course, this requires to
have =git= installed on your hosting. My host (via [[http://www.turtlehost.be/][TurtleHost.be]]) does
not have it. So I was thinking, why not install it myself. Idea
sounded more simple than doing it... .

** Requirements
   :PROPERTIES:
   :CUSTOM_ID: requirements
   :END:

- You need to have [[http://en.wikipedia.org/wiki/Secure_Shell][ssh]] access to your server.

** Finding git
   :PROPERTIES:
   :CUSTOM_ID: finding-git
   :END:

Before we can download =git=, we need to know which Linux distribution
your server is using. This is required so the =git= executable will be
able to use the correct libraries. To find out which kernel your
server is running, log in to your server via ssh and type the command:

#+BEGIN_SRC sh
cat /etc/*-release
#+END_SRC

On my server this returned =CentOS release 5.3 (Final)=. Next thing we
need to know if your server is running 32bit or 64bit. This we can
verify with the command:

#+BEGIN_SRC sh
uname -p
#+END_SRC

- =x86_64= indicates the server has 64bit kernel running.
- =i386= / =i486= / =i586= / =i686= means it is a 32bit kernel.

** Downloading git
   :PROPERTIES:
   :CUSTOM_ID: downloading-git
   :END:

Next we need to download =git= from somewhere. Probably you can find
it by searching it on a RPM repository. I found one on
[[http://rpm.pbone.net/][rpm.pbone.net]]. This site has a great search engine where you can find
=git= version for your server distro. After finding a download link,
again log in to your server via ssh and type the following commands:

#+BEGIN_SRC sh
mkdir ~/git-download
cd ~/git-download
wget ftp://the.download.link/of/repo/containing/git-1.6.x.x.rpm
#+END_SRC

Now you have the =.rpm= on your server.

** Installing git
   :PROPERTIES:
   :CUSTOM_ID: installing-git
   :END:

This =rpm= needs to be installed, but you won't be able to use the
regular =rpm= installer because this requires root access. You can
extract the =rpm= file with the command:

#+BEGIN_SRC sh
rpm2cpio git-1.6.x.x.rpm | cpio -imdv
#+END_SRC

This will create a =usr/= directory in currect directory. You best
move this directory to your home root:

#+BEGIN_SRC sh
mv usr ~/usr
#+END_SRC

Now we are almost there, we only need to add the directory to =$PATH=
variable. Doing this will make it possible to execute the command
=git= from anywhere. Open your =~/.bashrc= file with your favorite
editor (=vim= or =pico=) and add the following line:

#+BEGIN_SRC sh
export PATH=$PATH:$HOME/usr/bin:$HOME/usr/libexec/git-core
#+END_SRC

And that's it. To activate this change, run =source ~/.bashrc= or log
out and in again.

** Note
   :PROPERTIES:
   :CUSTOM_ID: note
   :END:

You can use =git= just by typing the =git= command. But =git init=
might give a warning:

#+BEGIN_EXAMPLE
    warning: templates not found /usr/share/git-core/templates
#+END_EXAMPLE

To avoid this warning I've added an alias to =~/.bashrc=:

#+BEGIN_SRC sh
alias git-init='git init --template=$HOME/usr/share/git-core/templates'
#+END_SRC

This =git-init= command is an alternative to =git init= and will take
the correct path for templates.

** Possible problems
   :PROPERTIES:
   :CUSTOM_ID: possible-problems
   :END:

One problem caused me a headache when using =git= to upload my site
was het error:

#+BEGIN_EXAMPLE
    git: 'index-pack' is not a git-command.
#+END_EXAMPLE

The reason for this problem was that =$HOME/usr/libexec/git-core= was
not added to the =$PATH= variable.

** Further reading
   :PROPERTIES:
   :CUSTOM_ID: further-reading
   :END:

So now you have =git= up and running on your server and you can use it
to upload your site. Read about it:

- [[http://www.wolfslittlestore.be/2009/06/websites-updaten-met-git/][Websites updaten met git]] - in Dutch
- [[http://toroid.org/ams/git-website-howto][Using Git to manage a web site]] - original article in English
